x-starrocks-fe-image: &starrocks-fe-image starrocks/fe-ubuntu:${STARROCKS_VERSION:-3.3-latest}
x-starrocks-be-image: &starrocks-be-image starrocks/be-ubuntu:${STARROCKS_VERSION:-3.3-latest}
x-starrocks-cn-image: &starrocks-cn-image starrocks/cn-ubuntu:${STARROCKS_VERSION:-3.3-latest}

x-minio-image: &minio-image minio/minio:${MINIO_VERSION:-RELEASE.2024-11-07T00-52-20Z}

services:
  starrocks-fe:
    image: *starrocks-fe-image
    container_name: starrocks-fe
    user: root
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        /opt/starrocks/fe/bin/start_fe.sh --host_type FQDN
    environment:
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=us-east-1
    ports:
      - "8030:8030" # HTTP Server (Web UI)
      - "9020:9020" # Thrift Server
      - "9030:9030" # MySQL Server
    healthcheck:
      test: ["CMD-SHELL", 'mysql -u root -h starrocks-fe -P 9030 -e "SHOW FRONTENDS\G" |grep "Alive: true"']
      interval: 5s
      timeout: 5s
      retries: 20
    restart: on-failure

  starrocks-be:
    image: *starrocks-be-image
    container_name: starrocks-be
    user: root
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        ulimit -u 65535
        ulimit -n 65535
        echo "# Enable data cache"  >> /opt/starrocks/be/conf/be.conf
        echo "block_cache_enable = true"  >> /opt/starrocks/be/conf/be.conf
        echo "block_cache_mem_size = 536870912" >> /opt/starrocks/be/conf/be.conf
        echo "block_cache_disk_size = 1073741824" >> /opt/starrocks/be/conf/be.conf
        sleep 15s
        mysql --connect-timeout 2 -h starrocks-fe -P 9030 -u root -e "ALTER SYSTEM ADD BACKEND \"starrocks-be:9050\";"
        bash /opt/starrocks/be/bin/start_be.sh
    environment:
      HOST_TYPE: "FQDN"
    ports:
      - 8040:8040
    healthcheck:
      test: ["CMD-SHELL", 'mysql -u root -h starrocks-fe -P 9030 -e "SHOW BACKENDS\G" |grep "Alive: true"']
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      starrocks-fe:
        condition: service_healthy
    restart: on-failure

  starrocks-cn:
    image: *starrocks-cn-image
    container_name: starrocks-cn
    user: root
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        ulimit -u 65535
        ulimit -n 65535
        mysql --connect-timeout 2 -h starrocks-fe -P9030 -uroot -e "ALTER SYSTEM ADD COMPUTE NODE \"starrocks-cn:9050\";"
        /opt/starrocks/cn/bin/start_cn.sh
    environment:
      HOST_TYPE: "FQDN"
    ports:
      - 8041:8040
    healthcheck:
      test: ["CMD-SHELL", 'mysql -u root -h starrocks-fe -P 9030 -e "SHOW COMPUTE NODES\G" |grep "Alive: true"']
      interval: 5s
      timeout: 5s
      retries: 20
    depends_on:
      starrocks-fe:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: on-failure

  minio:
    image: *minio-image
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - vol-minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 20
    restart: on-failure

  minio-init:
    image: *minio-image
    container_name: minio-init
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        mc alias set local http://minio:9000 minioadmin minioadmin
        mc mb local/lakehouse-raw
        mc mb local/lakehouse-staging
        mc mb local/lakehouse-service
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"

volumes:
  vol-minio-data:
    name: vol-minio-data
