version: "3.9" 

x-cp-kafka-image: &cp-kafka-image confluentinc/cp-kafka:${CONFLUENT_PLATFORM_VERSION:-7.6.0}
x-cp-zookeeper-image: &cp-zookeeper-image confluentinc/cp-zookeeper:${CONFLUENT_PLATFORM_VERSION:-7.6.0}

x-kafka-common: 
  &kafka-common
  image: *cp-kafka-image
  environment: &kafka-common-env
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_AUTO_CREATE_TOPICS_ENABLE: false
    KAFKA_DELETE_TOPIC_ENABLE: true
  depends_on:
    zookeeper: 
      condition: service_healthy
  healthcheck:
    test: ["CMD-SHELL", "cub kafka-ready -b localhost:9092 1 10 || exit 1"]
    start_period: 10s
    interval: 5s
    timeout: 10s
    retries: 3
  restart: on-failure

services:
  zookeeper:
    image: *cp-zookeeper-image
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 5
    ports:
      - '2181:2181'
    volumes:
      - ${ZK_DATA:-./volumes/zk_data}:/var/lib/zookeeper/data
      - ${ZK_LOGS:-./volumes/zk_logs}:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD-SHELL", "cub zk-ready localhost:2181 30 || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
    restart: on-failure

  broker0:
    <<: *kafka-common
    container_name: kafka_broker0
    environment:
      <<: *kafka-common-env
      KAFKA_BROKER_ID: 0
      KAFKA_LISTENERS: 'INTERNAL://:9092,EXTERNAL://:29092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092,EXTERNAL://:29092'
    ports:
      - '29092:29092'
    volumes:
      - ${KAFKA_DATA:-./volumes/kafka}/broker0:/var/lib/kafka/data

  # Conduktor Platform Docs:
  # - https://docs.conduktor.io/platform/configuration/env-variables
  # - https://docs.conduktor.io/platform/installation/hardware
  conduktor:
    container_name: conduktor
    image: conduktor/conduktor-platform:1.17.3
    environment:
      CDK_CLUSTERS_0_ID: 'warp'
      CDK_CLUSTERS_0_NAME: 'kafka-cluster-dev'
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker0:9092'
      CDK_ADMIN_EMAIL: 'admin@conduktor.io'
      CDK_ADMIN_PASSWORD: 'admin'
      CDK_LISTENING_PORT: 8080
      RUN_MODE: nano
    ports:
      - '8080:8080'
    depends_on:
      broker0:
        condition: service_healthy
    restart: on-failure