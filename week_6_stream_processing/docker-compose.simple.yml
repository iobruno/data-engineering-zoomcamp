version: "3.9"
services:
  zookeeper:
    container_name: cp-zookeeper
    image: confluentinc/cp-zookeeper:7.3.2
    platform: linux/arm64
    restart: always
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=5
    volumes:
      - ./volumes/confluent-single-broker/zk-data:/var/lib/zookeeper/data
      - ./volumes/confluent-single-broker/zk-txn-logs:/var/lib/zookeeper/log
    ports:
      - '2181:2181'
    networks:
      - sdn

  kafka_0:
    container_name: cp-kafka-0
    image: confluentinc/cp-kafka:7.3.2
    platform: linux/arm64
    restart: always
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://kafka_0:29090,EXTERNAL://:9090
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka_0:29090,EXTERNAL://127.0.0.1:9090
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    volumes:
      - ./volumes/confluent-single-broker/kafka_0:/var/lib/kafka/data
    depends_on:
      - zookeeper
    ports:
      - '9090:9090'
    networks:
      - sdn

  ksqldb-server:
    container_name: cp-ksqldb-server
    image: confluentinc/cp-ksqldb-server:7.3.2
    platform: linux/arm64
    restart: always
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka_0:29090,kafka_1:29091,kafka_2:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    depends_on:
      - zookeeper
      - kafka_0
    ports:
      - '8088:8088'
    networks:
      - sdn

  ksqldb-cli:
    container_name: cp-ksqldb-cli
    image: confluentinc/cp-ksqldb-cli:7.3.2
    platform: linux/arm64
    restart: always
    depends_on:
      - zookeeper
      - kafka_0
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - sdn

  schema-registry:
    container_name: cp-schema-registry
    image: confluentinc/cp-schema-registry:7.3.2
    platform: linux/arm64
    restart: always
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka_0:29090
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_DEBUG=true
    depends_on:
      - zookeeper
      - kafka_0
    ports:
      - '8081:8081'
    networks:
      - sdn

  # Confluent Control Center Docs:
  # - Comment out/Uncomment lines 174 to 199 to toggle Confluent Control Center on and off
  # - https://docs.confluent.io/platform/current/control-center/installation/configure-control-center.html
  # - https://docs.confluent.io/platform/current/control-center/installation/properties.html

  control-center:
    container_name: cp-control-center
    image: confluentinc/cp-enterprise-control-center:7.3.2
    platform: linux/arm64
    restart: always
    environment:
      - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka_0:29090
      - CONTROL_CENTER_ZOOKEEPER_CONNECT=zookeeper:2181
      - CONTROL_CENTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONTROL_CENTER_KSQL_KSQLDB-SERVER-0_URL=http://ksqldb-server:8088
      - CONTROL_CENTER_REPLICATION_FACTOR=1
      - CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS=1
      - CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS=1
      - CONFLUENT_METRICS_TOPIC_REPLICATION=1
      - PORT=9021
    depends_on:
      - zookeeper
      - kafka_0
      - ksqldb-server
      - schema-registry
    ports:
      - '9021:9021'
    networks:
      - sdn

  # Conduktor Platform Docs:
  # - https://docs.conduktor.io/platform/configuration/env-variables
  # - https://docs.conduktor.io/platform/installation/hardware
  conduktor-platform:
    container_name: conduktor-platform
    image: conduktor/conduktor-platform:1.12.1
    platform: linux/arm64
    environment:
      - CDK_CLUSTERS_0_ID=warp
      - CDK_CLUSTERS_0_NAME=kafka-in-docker-cluster
      - CDK_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_0:29090
      - CDK_CLUSTERS_0_SCHEMAREGISTRY_ID=warp-registry
      - CDK_CLUSTERS_0_SCHEMAREGISTRY_URL=http://schema-registry:8081
      - CDK_AUTH_LOCAL-USERS_0_EMAIL=admin@conduktor.io
      - CDK_AUTH_LOCAL-USERS_0_PASSWORD=admin
      - CDK_LISTENING_PORT=8080
      - RUN_MODE=nano
    depends_on:
      - zookeeper
      - kafka_0
      - ksqldb-server
      - schema-registry
    ports:
      - '8080:8080'
    networks:
      - sdn

networks:
  sdn:
    name: stream-processing-network
