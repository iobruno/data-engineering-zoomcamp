version: "3.9"
services:
  zookeeper:
    container_name: cp-zookeeper
    image: confluentinc/cp-zookeeper:7.4.3
    restart: on-failure:5
    hostname: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=5
    volumes:
      - ./volumes/zk-data:/var/lib/zookeeper/data
      - ./volumes/zk-txn-logs:/var/lib/zookeeper/log
    ports:
      - '2181:2181'
    networks:
      - sdn

  kafka0:
    container_name: cp-kafka-0
    image: confluentinc/cp-kafka:7.4.3
    restart: on-failure:5
    hostname: kafka0
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://kafka0:29092,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka0:29092,EXTERNAL://127.0.0.1:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    volumes:
      - ./volumes/kafka0:/var/lib/kafka/data
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    networks:
      - sdn

  kafka1:
    container_name: cp-kafka-1
    image: confluentinc/cp-kafka:7.4.3
    restart: on-failure:5
    hostname: kafka1
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://kafka1:29192,EXTERNAL://:9192
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka1:29192,EXTERNAL://127.0.0.1:9192
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    volumes:
      - ./volumes/kafka1:/var/lib/kafka/data
    depends_on:
      - zookeeper
    ports:
      - '9192:9192'
    networks:
      - sdn

  kafka2:
    container_name: cp-kafka-2
    image: confluentinc/cp-kafka:7.4.3
    restart: on-failure:5
    hostname: kafka2
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTERNAL://kafka2:29292,EXTERNAL://:9292
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka2:29292,EXTERNAL://127.0.0.1:9292
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
    volumes:
      - ./volumes/kafka2:/var/lib/kafka/data
    depends_on:
      - zookeeper
    ports:
      - '9292:9292'
    networks:
      - sdn

  ksqldb-server:
    container_name: cp-ksqldb-server
    image: confluentinc/cp-ksqldb-server:7.4.3
    restart: on-failure:5
    hostname: ksqldb-server
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka0:29092,kafka1:29192,kafka2:29292
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
    ports:
      - '8088:8088'
    networks:
      - sdn

  ksqldb-cli:
    container_name: cp-ksqldb-cli
    image: confluentinc/cp-ksqldb-cli:7.4.0
    restart: on-failure:5
    hostname: ksqldb-cli
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      - sdn

  schemaregistry:
    container_name: cp-schemaregistry
    image: confluentinc/cp-schema-registry:7.4.3
    restart: on-failure:5
    hostname: schemaregistry
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schemaregistry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=PLAINTEXT://kafka0:29092,PLAINTEXT://kafka1:29192,PLAINTEXT://kafka2:29292
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8081
      - SCHEMA_REGISTRY_DEBUG=true
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
    ports:
      - '8081:8081'
    networks:
      - sdn

  rest-proxy:
    container_name: cp-restproxy
    image: confluentinc/cp-kafka-rest:7.4.3
    restart: on-failure:5
    hostname: restproxy
    environment:
      - KAFKA_REST_HOST_NAME=restproxy
      - KAFKA_REST_BOOTSTRAP_SERVERS=PLAINTEXT://kafka0:29092,PLAINTEXT://kafka1:29192,PLAINTEXT://kafka2:29292
      - KAFKA_REST_SCHEMA_REGISTRY_URL=http://schemaregistry:8081
      - KAFKA_REST_LISTENERS=http://restproxy:8082
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
      - schemaregistry
    ports:
      - '8082:8082'
    networks:
      - sdn

  # Conduktor Platform Docs:
  # - https://docs.conduktor.io/platform/configuration/env-variables
  # - https://docs.conduktor.io/platform/installation/hardware
  conduktor:
    container_name: conduktor
    image: conduktor/conduktor-platform:1.17.3
    restart: on-failure:5
    hostname: conduktor
    environment:
      - CDK_CLUSTERS_0_ID=warp
      - CDK_CLUSTERS_0_NAME=kafka-in-docker-cluster
      - CDK_CLUSTERS_0_BOOTSTRAPSERVERS=kafka0:29092,kafka1:29192,kafka2:29292
      - CDK_CLUSTERS_0_SCHEMAREGISTRY_ID=warp-registry
      - CDK_CLUSTERS_0_SCHEMAREGISTRY_URL=http://schemaregistry:8081
      - CDK_ADMIN_EMAIL=admin@conduktor.io
      - CDK_ADMIN_PASSWORD=admin
      - CDK_LISTENING_PORT=8080
      - RUN_MODE=nano
    depends_on:
      - zookeeper
      - kafka0
      - kafka1
      - kafka2
      - schemaregistry
      - ksqldb-server
    ports:
      - '8080:8080'
    networks:
      - sdn

networks:
  sdn:
    name: stream-processing-network