x-mage-image: &mage-image mageai/mageai:${MAGE_VERSION:-0.9.74}
x-postgres-image: &postgres-image postgres:${POSTGRES_VERSION:-17-alpine}
x-redis-image: &redis-image redis:${REDIS_VERSION:-7.4.1-alpine}

x-mage-common: 
  &mage-common
  image: *mage-image
  environment:
    &mage-common-env
    MAGE_DATABASE_CONNECTION_URL: 'postgresql+psycopg2://mage:mage@mage-db/mage'
    REDIS_URL: 'redis://@mage-redis:6379/0'
    MAGE_PROJ_NAME: ${MAGE_PROJ_NAME:-magic}
    USER_CODE_PATH: ${USER_CODE_PATH:-/opt/mage/magic}
    GOOGLE_APPLICATION_CREDENTIALS: '/.gcp/credentials.json'
  volumes:
    - ${MAGE_PROJ_DIR:-./magic}:${USER_CODE_PATH:-/opt/mage/magic}
    - ~/.gcp/workflow-orchestration-credentials.json:/.gcp/credentials.json
  depends_on:
    mage-metastore:
      condition: service_healthy
    mage-redis:
      condition: service_healthy
    mage-init:
      condition: service_completed_successfully
  restart: on-failure

services:
  ingest-db:
    image: *postgres-image
    container_name: ingest-db
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'nyc_taxi'
    ports:
      - '5432:5432'
    volumes:
      - vol-ingest-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure

  mage-metastore:
    image: *postgres-image
    container_name: mage-metastore
    environment:
      POSTGRES_USER: mage
      POSTGRES_PASSWORD: mage
      POSTGRES_DB: mage
    ports:
      - '5433:5432'
    volumes:
      - vol-mage-metastore:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mage"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: on-failure

  mage-redis:
    image: *redis-image
    container_name: mage-redis
    ports:
      - '6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: on-failure

  mage-web:
    <<: *mage-common
    container_name: mage-web
    environment:
      <<: *mage-common-env
      INSTANCE_TYPE: 'web_server'
    ports:
      - '6789:6789'
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6789/"]
      interval: 5s
      timeout: 10s
      retries: 5

  mage-scheduler:
    <<: *mage-common
    container_name: mage-scheduler
    environment:
      <<: *mage-common-env
      INSTANCE_TYPE: 'scheduler'

  mage-init:
    image: *mage-image
    container_name: mage-init
    entrypoint: /bin/bash
    environment: 
      <<: *mage-common-env
    command:
      - -c
      - |
        export MOUNT_POINT=/mnt/mage
        export MOUNT_PROJ_DIR=$${MOUNT_POINT}/$${MAGE_PROJ_NAME}        
        export TMP_PROJ_DIR=/tmp/$$MOUNT_PROJ_DIR

        if [ ! -d "$$MOUNT_PROJ_DIR" ]; then
          mage init --project-type standalone $$TMP_PROJ_DIR 1>/dev/null 2>/dev/null
          mv $$TMP_PROJ_DIR $$MOUNT_PROJ_DIR
        fi
    volumes:
      - ${MAGE_PROJ_DIR:-.}:/mnt/mage/

volumes:
  vol-ingest-db:
    name: vol-ingest-db
  vol-mage-metastore:
    name: vol-mage-metastore
