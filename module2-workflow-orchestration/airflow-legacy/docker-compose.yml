version: "3.9"

x-airflow-image: &airflow-image apache/airflow:1.10.15-python3.9
x-postgres-image: &postgres-image postgres:${POSTGRES_VERSION:-16-alpine}
x-redis-image: &redis-image redis:${REDIS_VERSION:-7.2}

x-airflow-common:
  &airflow-common
  build: .
  image: *airflow-image
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
    AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
    AIRFLOW__CORE__BASE_LOG_FOLDER: /opt/airflow/logs
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow_legacy
    AIRFLOW__WEBSERVER__AUTHENTICATE: 'false'
    AIRFLOW__WEBSERVER__AUTH_BACKEND: airflow.contrib.auth.backends.password_auth
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/
  volumes:
    - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/dags
    - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    image: *postgres-image
    container_name: airflow_legacy_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_legacy
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: on-failure

  redis:
    image: *redis-image
    container_name: airflow_legacy_redis
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: on-failure

  airflow-web:
    <<: *airflow-common
    container_name: airflow_legacy_web
    command: ["webserver"]
    ports:
      - '8080:8080'
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: on-failure

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_legacy_scheduler
    command: ["scheduler"]
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    restart: on-failure

  airflow-worker:
    <<: *airflow-common
    container_name: airflow_legacy_worker
    command: ["celery", "worker"]
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD-SHELL", "celery --app=airflow.executors.celery_executor.app inspect ping"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: on-failure

  airflow-init:
    <<: *airflow-common
    container_name: airflow_legacy_init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID:-0}:0" /sources/{logs,dags,plugins}
        airflow db init
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources

volumes:
  pg_data:
    name: airflow_legacy_pgdata
